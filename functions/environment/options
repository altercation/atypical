:<< \
-------------------------------------------------------------------------------
Process command line options
-------------------------------------------------------------------------------
[[ -n "$(typeset SCRIPTOPT)" ]] || {
typeset -Ag SCRIPTOPT DEBUG FORCE SIM TEST VERBOSE XTRACE
optspec=":dfhsvxT-:"
while getopts "$optspec" optchar; do
    if [[ "${optchar}" == "-" ]]; then
            case "${OPTARG}" in
                debug|force|help|output|sim*|verbose|xtrace) optchar=${OPTARG:0:1} ;;
                *) [ "$OPTERR" = 1 ] && [ "${optspec:0:1}" != ":" ] && echo "Unknown option --${OPTARG}" >&2 ;;
            esac
    fi
    case "${optchar}" in
        d) SCRIPTOPT[DEBUG]=true; DEBUG=true ;;
        f) SCRIPTOPT[FORCE]=true; FORCE=true ;;
        h) echo "$USAGE"; exit 2 ;;
        o) SCRIPTOPT[OUTPUT]=true; SIM=true ;;
        s) SCRIPTOPT[SIM]=true; SIM=true ;;
        T) SCRIPTOPT[TEST]=true; TEST=true ;;
        v) SCRIPTOPT[VERBOSE]=true; VERBOSE=true ;;
        x) SCRIPTOPT[XTRACE]=true; XTRACE=true ;;
        *)
            if [ "$OPTERR" != 1 ] || [ "${optspec:0:1}" = ":" ]; then
                echo "Non-option argument: '-${OPTARG}'" >&2; exit 1;
            fi
            ;;
    esac
done
}
shift $((OPTIND-1)) # start where getopts left off


:<< \
-------------------------------------------------------------------------------
Options
-------------------------------------------------------------------------------
# script options: good habits like no_unset and ensuring we fail out if
# there are any errors... error handling must be present where "acceptable"
# error states are anticipated
setopt ERR_RETURN NO_UNSET GLOBAL_EXPORT EXTENDED_GLOB NULL_GLOB \
       ${SCRIPTOPT[VERBOSE]:+VERBOSE} ${SCRIPTOPT[XTRACE]:+XTRACE}

:<< \
-------------------------------------------------------------------------------
Modules
-------------------------------------------------------------------------------
zmodload zsh/zutil
