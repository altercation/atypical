## # MODULES & DE/WM BASICS
## # ------------------------------------------------------------------------------
## 
## # correct video driver
## 
## # INTEL
## if [ ${CONFIG[GRAPHICS]} == intel ]; then
## pacman --noconfirm -S xf86-video-intel xf86-input-synaptics xf86-input-wacom
## # lvds downclocking seems to cause problems if using glamor instead of sna in
## # intel xorg config file. intel xorg config with sna requires tear-free but
## # evidently tear-free is not a performant as other methods. need to look this up
## # so far, sna + the lvds downclocking seems to be better in terms of power usage
## cat > /etc/X11/xorg.conf.d/20-intel.conf <<EOF
## Section "Device"
##    Identifier  "Intel Graphics"
##    Driver      "intel"
##    Option      "Backlight"      "intel_backlight"
##    Option      "TearFree"    "true"
##    Option      "AccelMethod"  "sna"
## EndSection
## EOF
## 
## #echo "options i915 i915.modeset=0 i915_enable_rc6=7 i915_enable_fbc=1 lvds_downclock=1" > /etc/modprobe.d/i915.conf
## CONFIG[INIT_MODULES]="${CONFIG[INIT_MODULES]} i915"
## 
## # ATI
## elif [ ${CONFIG[GRAPHICS]} == ati ]; then
##     pacman --noconfirm -S xf86-video-ati
## cat > /etc/X11/xorg.conf.d/20-radeon.conf <<EOF
## Section "Device"
## 	Identifier  "My Graphics Card"
## 	Driver	"radeon"
## 	Option	"SWcursor"              "off" #software cursor might be necessary on some rare occasions, hence set off by default
## 	Option	"EnablePageFlip"        "on"  #supported on all R/RV/RS4xx and older hardware, and set on by default
## 	Option	"AccelMethod"           "EXA" #valid options are XAA, EXA and Glamor. Default value varies per-GPU.
## 	Option	"RenderAccel"           "on"  #enabled by default on all radeon hardware
## 	Option	"ColorTiling"           "on"  #enabled by default on RV300 and later radeon cards
## 	Option	"EXAVSync"              "on"  #default is off, otherwise on. Only works if EXA activated
## 	Option	"EXAPixmaps"            "on"  #when on icreases 2D performance, but may also cause artifacts on some old cards. Only works if EXA activated
## 	Option	"AccelDFS"              "on"  #default is off, read the radeon manpage for more information
## EndSection
## EOF
## echo "options radeon modeset=1 dpm=1 agpmode=8 aspm=1 fastfb=1" > /etc/modprobe.d/radeon.conf
## echo "blacklist i915" > /etc/modprobe.d/blacklist.conf
## CONFIG[INIT_MODULES]="${CONFIG[INIT_MODULES]} radeon"
## 
## # UNKNOWN
## else
##     echo -n "unknown graphics driver option set for CONFIG[GRAPHICS]: "
##     echo "${CONFIG[GRAPHICS]}"
##     exit 1
## fi
## 
## # gnome
## pacman --noconfirm -S gnome
## 
## # gnome radio
## pacman --noconfirm -S networkmanager gnome-bluetooth
## 
## # gnome tweaks and utils
## pacman --noconfirm -S gnome-tweak-tool gconf-editor
## 
## # gnome misc
## pacman --noconfirm -S gnome-common telepathy
## 
## # gnome apps
## # gnome-calendar-git gnome-shell-google-calendar-git
## 
## # gnome extensions
## : <<-OFF
## gnome-shell-extension-yawe-git # openweather
## gnome-shell-extension-topicons
## gnome-shell-extension-system-monitor-git
## gnome-shell-extension-starcal
## gnome-shell-extension-shellshape-git # YES
## gnome-shell-extension-sensors # YES 
## gnome-shell-extension-searchbookmarks-git
## gnome-shell-extension-pulseaudio-chooser-git # YES
## gnome-shell-extension-noa11y
## gnome-shell-extension-maximus # YES # requires xorg-xprop, edit of metadata.json
## gnome-shell-extension-icontopbar
## gnome-shell-extension-justshowthewindow # YES
## gnome-shell-extension-gtg-git # cf newer https://github.com/bsaleil/gtg-gnome-shell-extension
## gnome-shell-extension-focus-effects-git
## gnome-shell-extension-enhanced-search
## gnome-shell-extension-windowsnavigator-git
## gnome-shell-extension-timer-git
## gnome-shell-extension-mediaplayer-git
## 
## # FROM extensions.gnome.org
## Connection Manager # https://extensions.gnome.org/extension/699/connection-manager/
## Open Weather # https://extensions.gnome.org/extension/750/openweather/
## Transparent Windows https://extensions.gnome.org/extension/684/transparent-windows/
## Minimized Windows List https://extensions.gnome.org/extension/610/minimized-windows-list/
## Audio Output Switcher https://extensions.gnome.org/extension/751/audio-output-switcher/
## Advanced Volume Mixer https://extensions.gnome.org/extension/212/advanced-volume-mixer/
## Media Keys to MPRIS2 https://extensions.gnome.org/extension/695/mediakeys-to-mpris2/
## OFF
## 
## # turn on gnome services
## systemctl enable gdm
## systemctl enable NetworkManager
## systemctl enable bluetooth
## 
## # run gsettings (do I need to be user or root? can I set globally? do i need to
## # have dbus running?) ... maybe create a user post install script otherwise
## # http://blog.fpmurphy.com/2011/03/customizing-the-gnome-3-shell.html
## 
## # INSTALL FROM AUR: gnome-defaults-list
## # or create /etc/gnome/defaults.list here
## 
## 
## 
## # PLYMOUTH
## # ---/---------------------------------------------------------------------------
## 
## ##mkdir /var/tmp/plymouth
## ##cd /var/tmp/plymouth
## ##curl -O https://aur.archlinux.org/packages/pl/plymouth-release/plymouth-release.tar.gz
## ##tar -xzvf plymouth-release*tar.gz
## ##cd plymouth-release
## ##makepkg -si --noconfirm --asroot
## #sudo pacman -noconfirm -U plymouth-release*.tar.xz
## ##cd /
## ##systemctl disable gdm
## ##systemctl enable gdm-plymouth
:<< \
'-----------------------------------------------------------------------'
-----------------------------------------------------------------------
# FILESYSTEM UTILS, SNAPSHOTS, & LOCATE
# ------------------------------------------------------------------------------
# dosfstools used to fsck the vfat EFI system partition
INSTALL dosfstools btrfs-progs snapper mlocate
KEY=PRUNENAMES; VALUE='".git .hg .svn .snapshots"'; FILE=/etc/updatedb.conf
sed -i "s/\($KEY *= *\).*/\1$VALUE/" $FILE
# Need to create systemd service:
: <<OFF
/etc/systemd/system/timer-daily.target.wants/mlocate-update.service
[Unit]
Description=Update mlocate database

[Service]
Nice=19
IOSchedulingClass=2
IOSchedulingPriority=7
ExecStart=/usr/bin/updatedb -f proc
OFF




# PREPARE ENCRYPTED HOME & CONFIGURE FOR MOUNT ON LOGIN
# ------------------------------------------------------------------------------

# get encrypted home UUID
##DEV_HOME_UUID=$(lsblk --output UUID ${CONFIG[DEV_HOME]})
##DEV_HOME_MNT_OPTS="rw,noatime,compress=lzo,space_cache,autodefrag,inode_cache"

# PREPARE ENCRYPTED HOME
##cryptsetup -y -v luksFormat ${CONFIG[DEV_HOME]}
##cryptsetup open ${CONFIG[DEV_HOME]} crypt_home
##mkfs.btrfs -L home /dev/mapper/crypt_home
# mount here temporarily so we can create a new user home directory later
# but we don't need this in fstab, nor do we need encrypt as a hook in initcpio
##mount -o $DEV_HOME_MNT_OPTS /dev/mapper/crypt_home $MOUNT_ROOT/home

# install pam_mount to enable mount of LUKS volume at login
##pacman --noconfirm -S pam_mount

# configure pam_mount
##sed -i '/<\/pam_mount>/! p' /etc/security/pam_mount.conf.xml
##cat >> /etc/security/pam_mount.conf.xml <<EOM
##<volume user="${CONFIG[USERNAME]}" fstype="auto" path="/dev/disk/by-uuid/$DEV_HOME_UUID" mountpoint="/home" options="$DEV_HOME_MOUNT_OPTS" />
##<mkmountpoint enable="1" remove="true" />
##</pam_mount>
##EOM

# configure gdm-password
#function gdmadd () { sed -i "/$1/ a $2\n" /etc/pam.d/gdm-password; }
#gdmadd "auth.*pam_gnome_keyring.so.*"    "auth     optional  pam_mount.so"
#gdmadd "password.*system-local-login.*"  "password optional  pam_mount.so"
#gdmadd "session.*pam_gnome_keyring.so.*" "session  optional  pam_mount.so"


# PERFORMANCE
# ------------------------------------------------------------------------------
# cf https://wiki.archlinux.org/index.php/Maximizing_Performance

# Contains, as a percentage of total system memory, the number of pages at which
# a process which is generating disk writes will start writing out dirty data.
echo "vm.dirty_ratio = 3" >> /etc/sysctl.d/99-sysctl.conf 

# Contains, as a percentage of total system memory, the number of pages at which
# the background kernel flusher threads will start writing out dirty data.
echo "vm.dirty_background_ratio = 2" >> /etc/sysctl.d/99-sysctl.conf 

# The swappiness sysctl parameter represents the kernel's preference (or 
# avoidance) of swap space. Swappiness can have a value between 0 and 100. 
# Setting this parameter to a low value will reduce swapping from RAM, and is 
# known to improve responsiveness on many systems.
echo "vm.swappiness=1" >> /etc/sysctl.d/99-sysctl.conf 
echo "vm.vfs_cache_pressure=50" >> /etc/sysctl.d/99-sysctl.conf 

#echo "options ipv6 disable=1" > /etc/modprobe.d/ipv6.conf

# EFISTUB
# ------------------------------------------------------------------------------

## >>> pacman --noconfirm -S efibootmgr

#CONFIG[KERNEL_PARAMS]="initrd=\\initramfs-linux.img root=/dev/mapper/${CONFIG[CRYPTMAPPED_NAME]} cryptdevice=PARTLABEL=${CONFIG[SYSTEMPART_NAME]}:${CONFIG[CRYPTMAPPED_NAME]} zswap.enabled=1 ipv6.disable=1 quiet splash rw"
#CONFIG[KERNEL_PARAMS]="initrd=\\initramfs-linux.img root=/dev/mapper/${CONFIG[CRYPTMAPPED_NAME]} cryptdevice=UUID=${CONFIG[SYSTEMPART_UUID]}:${CONFIG[CRYPTMAPPED_NAME]} rw"
## >>> CONFIG[KERNEL_PARAMS]="initrd=\\initramfs-linux.img root=/dev/mapper/${CONFIG[CRYPTMAPPED_NAME]} cryptdevice=${CONFIG[DEV_INSTALL]}2:${CONFIG[CRYPTMAPPED_NAME]} zswap.enabled=1 ipv6.disable=1 quiet splash rw"

# Find and delete existing boot entry with same name
##>>> EXISTING_ENTRY="$(efibootmgr | grep "${CONFIG[BOOTLABEL]}" | sed "s/Boot\(.*\)\*.*/\1/")"
##>>> [[ -n "$EXISTING_ENTRY" ]] && efibootmgr -b $EXISTING_ENTRY -B

# Create new boot entry
##>>> efibootmgr -c -d ${CONFIG[DEV_INSTALL]} -p 1 -l /vmlinuz-linux -L "${CONFIG[BOOTLABEL]}" -u "${CONFIG[KERNEL_PARAMS]}"

pacman --noconfirm -S refind-efi
mkdir -p /boot/efi/EFI/refine || :
cp /usr/share/refind/refind_x64.efi /boot/efi/EFI/refind/refind_x64.efi
cp /usr/share/refind/refind.conf-sample  /boot/efi/EFI/refind/refind.conf
cp -r /usr/share/refind/icons /boot/efi/EFI/refind/
cp -r /usr/share/refind/fonts /boot/efi/EFI/refind/
cp -r /usr/share/refind/drivers_x64 /boot/efi/EFI/refind/
cat > /boot/efi/EFI/refind/refind.conf <<-EOM
CONFIG[KERNEL_PARAMS]="initrd=\\initramfs-linux.img root=/dev/mapper/${CONFIG[CRYPTMAPPED_NAME]} cryptdevice=${CONFIG[DEV_INSTALL]}2:${CONFIG[CRYPTMAPPED_NAME]} zswap.enabled=1 ipv6.disable=1 quiet splash rw"
menuentry "Arch Linux" {
        icon    EFI/refind/icons/os_arch.icns
        loader  vmlinuz-linux
        initrd  initramfs-linux.img
        options "${CONFIG[KERNEL_PARAMS]} add_efi_memmap"
}
EOM
INSTALL sudo vim git gptfdisk
# ------------------------------------------------------------------------------
: <<'IGNORE'



# snapper setup
snapper -c root create-config /
snapper -c var create-config /var # for exclusion other than subvolumes of var
snapper -c paclib create-config /var/lib/pacman # for inclusion
snapper -c paccache create-config /var/cache/pacman # for inclusion
snapper -c home create-config /home

# take initial snapshots
SNAPDESC="initial install-time snapshot"
snapper -c root create -d $SNAPDESC
snapper -c var create -d $SNAPDESC
snapper -c paclib create -d $SNAPDESC
snapper -c paccache create -d $SNAPDESC
snapper -c home create -d $SNAPDESC


# snapper setup
# snapper -c root create-config /
# snapper -c var create-config /var
# snapper -c pacman create-config /var/lib/pacman
# snapper -c home create-config /home

# take snapshot
# snapper create

snapper create -d "

updatedb
By default, updatedb will also index the .snapshots directory created by snapper, which can cause serious slowdown and excessive memory usage if you have many snapshots. You can prevent updatedb from indexing over it by editing:
/etc/updatedb.conf
PRUNENAMES = ".snapshots"




# remap shift-space to underscore
# xmodmap -e 'keycode 65 = space underscore space'






#powertop 
sudo pacman --noconfirm -S powertop 
sudo powertop --calibrate 
sudo powertop --auto-tune 






# powertop
# tlp
cpupower
# add cpupower to monitor where we are at with all this
pacman -S cpupower
http://www.thinkwiki.org/wiki/Category:X220_Tablet
From Thinkwiki:
It is a known problem for the X220 Tablet (other models may apply), that there is a problem concerning the CPU throttling in LINUX.
Syntoms vary for different kernels and distributions. Eg in ubuntu the CPU speed gets blocked at low rates and the computer becomes very slow until reboot, in Opensuse the entire desktop freezes (only mouse pointer working) and switching to console is not possible.
Solution is to disable the power management in the BIOS (at least disable BIOS CPU speed throttling). This has no major affect on battery life since the OS is still able to throttle the CPU when neccessary.







Tips and tricks

PowerTOP suggests a few methods to reduce the power consumption further. However, in the console, PowerTOP does not display the parameters. To find out which ones are suggested, proceed as follows:
If you have changed parameters (e.g. in PowerTOP), reboot so that the system has default state of the parameters.
Use PowerTOP to produce a report on parameters: # powertop --html=powerreport.html
The last tab of the report now shows the actual parameters suggested by the tool to apply to save power.
Powertop 2.5 includes an --auto-tune feature which sets all tunable options to their GOOD setting. This can be combined with systemd to have the tunables set on boot.
/etc/systemd/system/powertop.service
[Unit]
Description=Powertop tunings
[Service]
Type=oneshot
RemainAfterExit=no
ExecStart=/usr/bin/powertop --auto-tune
#"powertop --auto-tune" still needs a terminal for some reason.
#Possibly a bug?
Environment="TERM=xterm"

[Install]
WantedBy=multi-user.target


# TLP INSTALL ON x100e I note following optional dependencies
acpi_call
acpid
ethtool
iw
lsb-release
smartmontools
tp_smapi





# power management via tlp - https://wiki.archlinux.org/index.php/TLP
pacman -S tp_smapi acpi_call #thinkpad only
pacman -S tlp tlp-rdw
systemctl enable tlp
#NOT USING tlp-sleep RIGHT NOW- might have interferred with suspend/resume
#systemctl enable tlp-sleep
systemctl enable NetworkManager-dispatcher
# The configuration file is located at /etc/default/tlp
# cf http://linrunner.de/en/tlp/docs/tlp-configuration.html

# set up https://wiki.archlinux.org/index.php/Tp_smapi
# REALLY NEED TO CHECK THIS


# add cpupower to monitor where we are at with all this
pacman -S cpupower
http://www.thinkwiki.org/wiki/Category:X220_Tablet
From Thinkwiki:
It is a known problem for the X220 Tablet (other models may apply), that there is a problem concerning the CPU throttling in LINUX.
Syntoms vary for different kernels and distributions. Eg in ubuntu the CPU speed gets blocked at low rates and the computer becomes very slow until reboot, in Opensuse the entire desktop freezes (only mouse pointer working) and switching to console is not possible.
Solution is to disable the power management in the BIOS (at least disable BIOS CPU speed throttling). This has no major affect on battery life since the OS is still able to throttle the CPU when neccessary.

aura -A gnome-shell-cpufreq-git

#cpupower is good for checking but current kernel defaults are fine and no changes needed to be made

# thinkfan
install thinkfan from aur
enable the service

NUVOLA PLAYER:
-------------------------------------------------------
pacman -S gst-plugins-ugly libgee06 libunique flashplugin lib32-flashplugin
aura -A scour nuvolaplayer


Install the necessary Flash dependencies by running one of the following commands:

pacman -S flashplugin; # For 32-bit systems
pacman -S lib32-flashplugin; # For 64-bit systems
Alternatively, you can just install dependencies of these packages, see flashplugin 32bit or flashplugin 64bit for a list of dependencies.

You have to install also lib32-libpulse and lib32-alsa-plugins on 64-bit systems.

pacman -S lib32-libpulse lib32-alsa-plugins; # For 64-bit systems
Install nspluginwrapper:

pacman -S nspluginwrapper
Download script nuvolaplayer-flashplugin-installer

Run the script to install wrapped Flash plugin.

SKIP THIS? I did it manually:
sudo bash ./nuvolaplayer-flashplugin-installer --install --force

Manual method:

sudo nspluginwrapper -v -n -i /usr/lib32/mozilla/plugins/libflashplayer.so
sudo mkdir -p /opt/nuvolaplayer/flash/{orig,wrapped}
sudo mv /usr/lib/mozilla/plugins/npwrapper.libflashplayer.so /opt/nuvolaplayer/flash/wrapped/
sudo cp /usr/lib32/mozilla/plugins/libflashplayer.so /opt/nuvolaplayer/flash/orig/



IGNORE

